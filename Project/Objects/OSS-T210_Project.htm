<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\OSS-T210_Project.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\OSS-T210_Project.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Mon Sep 22 11:42:18 2025
<BR><P>
<H3>Maximum Stack Usage =        396 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; $Super$$main &rArr; app_timeSlice_Task &rArr; app_ButtonCheck_Task &rArr; app_ButtonDispose &rArr; Drive_FlashSaveData &rArr; Drive_FlashSaveData_addr &rArr; Drive_FlashProgramWithCheck &rArr; Drive_FlashProgram &rArr; APP_ErrorHandler &rArr; APP_shortCircuitProtection &rArr; Drive_MosSwitch245_PWMOut &rArr; Drive_MosPWMoutMode &rArr;  APP_ErrorHandler (Cycle)
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[48]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[15]">ADC_COMP_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[15]">ADC_COMP_IRQHandler</a><BR>
 <LI><a href="#[7]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">HardFault_Handler</a><BR>
 <LI><a href="#[a4]">Drive_TIM3_PWM</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4e]">APP_ErrorHandler</a><BR>
 <LI><a href="#[a3]">Drive_TIM3_INIT</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4e]">APP_ErrorHandler</a><BR>
 <LI><a href="#[a2]">Drive_MosPWMoutMode</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4e]">APP_ErrorHandler</a><BR>
 <LI><a href="#[76]">Drive_ADCConvert</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4e]">APP_ErrorHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[15]">ADC_COMP_IRQHandler</a> from startup_py32f003xx.o(.text) referenced from startup_py32f003xx.o(RESET)
 <LI><a href="#[13]">DMA1_Channel1_IRQHandler</a> from startup_py32f003xx.o(.text) referenced from startup_py32f003xx.o(RESET)
 <LI><a href="#[14]">DMA1_Channel2_3_IRQHandler</a> from startup_py32f003xx.o(.text) referenced from startup_py32f003xx.o(RESET)
 <LI><a href="#[10]">EXTI0_1_IRQHandler</a> from startup_py32f003xx.o(.text) referenced from startup_py32f003xx.o(RESET)
 <LI><a href="#[11]">EXTI2_3_IRQHandler</a> from startup_py32f003xx.o(.text) referenced from startup_py32f003xx.o(RESET)
 <LI><a href="#[12]">EXTI4_15_IRQHandler</a> from drive_encoder.o(i.EXTI4_15_IRQHandler) referenced from startup_py32f003xx.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_py32f003xx.o(.text) referenced from startup_py32f003xx.o(RESET)
 <LI><a href="#[7]">HardFault_Handler</a> from py32f0xx_it.o(i.HardFault_Handler) referenced from startup_py32f003xx.o(RESET)
 <LI><a href="#[1d]">I2C1_IRQHandler</a> from startup_py32f003xx.o(.text) referenced from startup_py32f003xx.o(RESET)
 <LI><a href="#[19]">LPTIM1_IRQHandler</a> from startup_py32f003xx.o(.text) referenced from startup_py32f003xx.o(RESET)
 <LI><a href="#[6]">NMI_Handler</a> from py32f0xx_it.o(i.NMI_Handler) referenced from startup_py32f003xx.o(RESET)
 <LI><a href="#[c]">PVD_IRQHandler</a> from startup_py32f003xx.o(.text) referenced from startup_py32f003xx.o(RESET)
 <LI><a href="#[9]">PendSV_Handler</a> from py32f0xx_it.o(i.PendSV_Handler) referenced from startup_py32f003xx.o(RESET)
 <LI><a href="#[f]">RCC_IRQHandler</a> from startup_py32f003xx.o(.text) referenced from startup_py32f003xx.o(RESET)
 <LI><a href="#[d]">RTC_IRQHandler</a> from startup_py32f003xx.o(.text) referenced from startup_py32f003xx.o(RESET)
 <LI><a href="#[5]">Reset_Handler</a> from startup_py32f003xx.o(.text) referenced from startup_py32f003xx.o(RESET)
 <LI><a href="#[1e]">SPI1_IRQHandler</a> from startup_py32f003xx.o(.text) referenced from startup_py32f003xx.o(RESET)
 <LI><a href="#[8]">SVC_Handler</a> from py32f0xx_it.o(i.SVC_Handler) referenced from startup_py32f003xx.o(RESET)
 <LI><a href="#[a]">SysTick_Handler</a> from py32f0xx_it.o(i.SysTick_Handler) referenced from startup_py32f003xx.o(RESET)
 <LI><a href="#[21]">SystemInit</a> from system_py32f0xx.o(i.SystemInit) referenced from startup_py32f003xx.o(.text)
 <LI><a href="#[1a]">TIM14_IRQHandler</a> from startup_py32f003xx.o(.text) referenced from startup_py32f003xx.o(RESET)
 <LI><a href="#[1b]">TIM16_IRQHandler</a> from startup_py32f003xx.o(.text) referenced from startup_py32f003xx.o(RESET)
 <LI><a href="#[1c]">TIM17_IRQHandler</a> from startup_py32f003xx.o(.text) referenced from startup_py32f003xx.o(RESET)
 <LI><a href="#[16]">TIM1_BRK_UP_TRG_COM_IRQHandler</a> from startup_py32f003xx.o(.text) referenced from startup_py32f003xx.o(RESET)
 <LI><a href="#[17]">TIM1_CC_IRQHandler</a> from startup_py32f003xx.o(.text) referenced from startup_py32f003xx.o(RESET)
 <LI><a href="#[18]">TIM3_IRQHandler</a> from startup_py32f003xx.o(.text) referenced from startup_py32f003xx.o(RESET)
 <LI><a href="#[1f]">USART1_IRQHandler</a> from drive_uart.o(i.USART1_IRQHandler) referenced from startup_py32f003xx.o(RESET)
 <LI><a href="#[20]">USART2_IRQHandler</a> from startup_py32f003xx.o(.text) referenced from startup_py32f003xx.o(RESET)
 <LI><a href="#[b]">WWDG_IRQHandler</a> from startup_py32f003xx.o(.text) referenced from startup_py32f003xx.o(RESET)
 <LI><a href="#[23]">__main</a> from __main.o(!!!main) referenced from startup_py32f003xx.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[23]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[24]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[26]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[11e]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[11f]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[120]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[2a]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[121]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[122]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[123]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[124]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[125]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[126]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[127]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[128]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[129]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[12a]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[12b]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[12c]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[12d]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[12e]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[12f]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[130]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[131]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[132]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[133]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[134]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[135]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[2f]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[136]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[137]"></a>__rt_lib_shutdown_fini_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[138]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[139]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000011))

<P><STRONG><a name="[13a]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000012))

<P><STRONG><a name="[13b]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[13c]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[13d]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[25]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[13e]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[27]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[29]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[13f]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[2b]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 396 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; $Super$$main &rArr; app_timeSlice_Task &rArr; app_ButtonCheck_Task &rArr; app_ButtonDispose &rArr; Drive_FlashSaveData &rArr; Drive_FlashSaveData_addr &rArr; Drive_FlashProgramWithCheck &rArr; Drive_FlashProgram &rArr; APP_ErrorHandler &rArr; APP_shortCircuitProtection &rArr; Drive_MosSwitch245_PWMOut &rArr; Drive_MosPWMoutMode &rArr;  APP_ErrorHandler (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[140]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[4a]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[2e]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[141]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[30]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[c2]"></a>__aeabi_memcpy4</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, rt_memcpy.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>

<P><STRONG><a name="[142]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy.o(.emb_text), UNUSED)

<P><STRONG><a name="[5]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_py32f003xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>ADC_COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_COMP_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_COMP_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>DMA1_Channel2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>LPTIM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TIM1_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f003xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_py32f003xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[96]"></a>memcmp</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_FlashProgramWithCheck
</UL>

<P><STRONG><a name="[33]"></a>_memset_w</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>

<P><STRONG><a name="[32]"></a>_memset</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[34]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>

<P><STRONG><a name="[143]"></a>__rt_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[91]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_FlashErase
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_SystemClockConfig
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_MspInit
</UL>

<P><STRONG><a name="[144]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[35]"></a>__rt_memclr_w</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[145]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[4d]"></a>__aeabi_uidivmod</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConfigChannel
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_DeInit
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Enable
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchBuzzer_overtone
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_buzHz
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LimitFilter
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIR_LowpassFilter
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;median_filter
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_smgUp3_SetNum
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_SetNum_D3
</UL>

<P><STRONG><a name="[146]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[cb]"></a>__aeabi_idivmod</STRONG> (Thumb, 326 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_buzzer_freq_by_temp
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_SetNimus_D3
</UL>

<P><STRONG><a name="[147]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[148]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[149]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[109]"></a>__aeabi_d2f</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_soldering_T12_adcTurnToTemp
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_solderingT210_adcTurnToTemp
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_solderingT115_adcTurnToTemp
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_Samp_electricity_Task
</UL>

<P><STRONG><a name="[14a]"></a>_d2f</STRONG> (Thumb, 120 bytes, Stack size 12 bytes, d2f.o(.text), UNUSED)

<P><STRONG><a name="[110]"></a>__aeabi_dadd</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_soldering_T12_adcTurnToTemp
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_solderingT210_adcTurnToTemp
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_solderingT115_adcTurnToTemp
</UL>

<P><STRONG><a name="[36]"></a>_dadd</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[14b]"></a>__aeabi_dsub</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub.o(.text), UNUSED)

<P><STRONG><a name="[39]"></a>_dsub</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[14c]"></a>__aeabi_drsub</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, daddsub.o(.text), UNUSED)

<P><STRONG><a name="[3a]"></a>_drsb</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[3c]"></a>__aeabi_i2d_normalise</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, dflti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
</UL>

<P><STRONG><a name="[3b]"></a>__aeabi_i2d</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, dflti.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d_normalise
</UL>

<P><STRONG><a name="[14d]"></a>_dflt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflti.o(.text), UNUSED)

<P><STRONG><a name="[3d]"></a>__aeabi_ui2d</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dflti.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d_normalise
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_solderingT210_adcTurnToTemp
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_solderingT115_adcTurnToTemp
</UL>

<P><STRONG><a name="[14e]"></a>_dfltu</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflti.o(.text), UNUSED)

<P><STRONG><a name="[108]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 56 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_soldering_T12_adcTurnToTemp
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_solderingT210_adcTurnToTemp
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_solderingT115_adcTurnToTemp
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_Samp_electricity_Task
</UL>

<P><STRONG><a name="[14f]"></a>_dmul</STRONG> (Thumb, 558 bytes, Stack size 56 bytes, dmul.o(.text), UNUSED)

<P><STRONG><a name="[107]"></a>__aeabi_f2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_soldering_T12_adcTurnToTemp
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_solderingT210_adcTurnToTemp
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_solderingT115_adcTurnToTemp
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_Samp_electricity_Task
</UL>

<P><STRONG><a name="[150]"></a>_f2d</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, f2d.o(.text), UNUSED)

<P><STRONG><a name="[5d]"></a>__aeabi_fdiv</STRONG> (Thumb, 0 bytes, Stack size 20 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_DisplayFilter_kalman
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLoadCurrent
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_kalmanFilter_solderingTemp
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_KalmanFilter_Power
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_KalmanFilter_Ele
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetElectricity_soft_Task
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pid_PCmd
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_Lcd_SolderingIcon_Blink_Task
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Power_complementaryFilter_Task
</UL>

<P><STRONG><a name="[3f]"></a>_fdiv</STRONG> (Thumb, 334 bytes, Stack size 20 bytes, fdiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frdiv
</UL>

<P><STRONG><a name="[3e]"></a>_frdiv</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fdiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fdiv
</UL>

<P><STRONG><a name="[70]"></a>__aeabi_f2uiz</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_DisplayFilter_RC
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LimitFilter
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLoadCurrent
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIR_LowpassFilter
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_shortCircuitProtection
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_GetAdcVlaue_soldering
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pidControl
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_SolderingTempDisplay
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_Lcd_SolderingIcon_Blink_Task
</UL>

<P><STRONG><a name="[151]"></a>_ffixu</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, ffixui.o(.text), UNUSED)

<P><STRONG><a name="[41]"></a>__aeabi_i2f_normalise</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
</UL>

<P><STRONG><a name="[40]"></a>__aeabi_i2f</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f_normalise
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LimitFilter
</UL>

<P><STRONG><a name="[152]"></a>_fflt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflti.o(.text), UNUSED)

<P><STRONG><a name="[42]"></a>__aeabi_ui2f</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f_normalise
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_soldering_T12_adcTurnToTemp
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_solderingT210_adcTurnToTemp
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_solderingT115_adcTurnToTemp
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LimitFilter
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLoadCurrent
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIR_LowpassFilter
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_solderingElectricity_Get
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_PcbNtc_adcTurnToTemp
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_GetAdcVlaue_soldering
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pidControl
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pid_iCmd
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pid_PCmd
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_SolderingTempDisplay
</UL>

<P><STRONG><a name="[153]"></a>_ffltu</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflti.o(.text), UNUSED)

<P><STRONG><a name="[f0]"></a>__ARM_scalbnf</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, fscalbn.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_scalbnf
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_DisplayFilter_kalman
</UL>

<P><STRONG><a name="[43]"></a>__fpl_fcmp_InfNaN</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, fcmpin.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frcmple
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmple
</UL>

<P><STRONG><a name="[44]"></a>__fpl_cmpreturn</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, cmpret.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
</UL>

<P><STRONG><a name="[45]"></a>__fpl_fcheck_NaN2</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, fnan2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
</UL>

<P><STRONG><a name="[28]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[2d]"></a>exit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[46]"></a>__fpl_return_NaN</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, retnan.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
</UL>

<P><STRONG><a name="[154]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[47]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[155]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[31]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[156]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[157]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[158]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[159]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[15a]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[2c]"></a>main</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, system_py32f0xx.o(i.$Sub$$main))
<BR><BR>[Stack]<UL><LI>Max Depth = 396<LI>Call Chain = main &rArr; $Super$$main &rArr; app_timeSlice_Task &rArr; app_ButtonCheck_Task &rArr; app_ButtonDispose &rArr; Drive_FlashSaveData &rArr; Drive_FlashSaveData_addr &rArr; Drive_FlashProgramWithCheck &rArr; Drive_FlashProgram &rArr; APP_ErrorHandler &rArr; APP_shortCircuitProtection &rArr; Drive_MosSwitch245_PWMOut &rArr; Drive_MosPWMoutMode &rArr;  APP_ErrorHandler (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[4e]"></a>APP_ErrorHandler</STRONG> (Thumb, 214 bytes, Stack size 16 bytes, main.o(i.APP_ErrorHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = APP_ErrorHandler &rArr; APP_shortCircuitProtection &rArr; Drive_MosSwitch245_PWMOut &rArr; Drive_MosPWMoutMode &rArr;  APP_ErrorHandler (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IWDG_Refresh
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_DisplayLcd_sendData_Task
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_MosSwitch_OFF
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_Buz_OnOff
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_shortCircuitProtection
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_smgUp3_SetNum
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_smgDowm3_SetErrorNum
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_icon_onOff
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_FlashProgram
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_FlashErase
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_FlashBlank
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_Iwdg_init
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_TIM3_PWM
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_TIM3_INIT
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_MosPWMoutMode
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_SystemClockConfig
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_AdcConfig
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_ADCConvert
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_PcbTempProtect_Task
</UL>

<P><STRONG><a name="[59]"></a>APP_FirFilter_ADC</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, app_math.o(i.APP_FirFilter_ADC))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = APP_FirFilter_ADC &rArr; arm_fir_f32 &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_fir_f32
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_GetAdcVlaue_soldering
</UL>

<P><STRONG><a name="[5b]"></a>APP_FirFilter_NtcTemp</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, app_math.o(i.APP_FirFilter_NtcTemp))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = APP_FirFilter_NtcTemp &rArr; arm_fir_f32 &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_fir_f32
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_GetAdcVlaue_NTC
</UL>

<P><STRONG><a name="[5c]"></a>APP_GetElectricity_soft_Task</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, app_math.o(i.APP_GetElectricity_soft_Task))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = APP_GetElectricity_soft_Task &rArr; APP_KalmanFilter_Power &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_KalmanFilter_Power
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_GetAdcVlaue_electricity_Task
</UL>

<P><STRONG><a name="[60]"></a>APP_KalmanFilter_Ele</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, app_math.o(i.APP_KalmanFilter_Ele))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = APP_KalmanFilter_Ele &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLoadCurrent
</UL>

<P><STRONG><a name="[5f]"></a>APP_KalmanFilter_Power</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, app_math.o(i.APP_KalmanFilter_Power))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = APP_KalmanFilter_Power &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetElectricity_soft_Task
</UL>

<P><STRONG><a name="[63]"></a>APP_PcbNtc_adcTurnToTemp</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, app_math.o(i.APP_PcbNtc_adcTurnToTemp))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = APP_PcbNtc_adcTurnToTemp &rArr; square_3 &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;square_3
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;square_2
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_GetAdcVlaue_NTC
</UL>

<P><STRONG><a name="[66]"></a>APP_Power_complementaryFilter_Task</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, app_math.o(i.APP_Power_complementaryFilter_Task))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = APP_Power_complementaryFilter_Task &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timeSlice_Task
</UL>

<P><STRONG><a name="[67]"></a>APP_SleepCloseBackLight_Task</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, app_hci.o(i.APP_SleepCloseBackLight_Task))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = APP_SleepCloseBackLight_Task &rArr; Drive_Buz_OnOff &rArr; get_buzzer_freq_by_temp &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_BackLed_OnOff
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_Buz_OnOff
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timeSlice_Task
</UL>

<P><STRONG><a name="[69]"></a>APP_TarTempSaveInFlash_Task</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, app_coder.o(i.APP_TarTempSaveInFlash_Task))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = APP_TarTempSaveInFlash_Task &rArr; Drive_FlashSaveData &rArr; Drive_FlashSaveData_addr &rArr; Drive_FlashProgramWithCheck &rArr; Drive_FlashProgram &rArr; APP_ErrorHandler &rArr; APP_shortCircuitProtection &rArr; Drive_MosSwitch245_PWMOut &rArr; Drive_MosPWMoutMode &rArr;  APP_ErrorHandler (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_FlashSaveData
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timeSlice_Task
</UL>

<P><STRONG><a name="[6b]"></a>APP_kalmanFilter_solderingTemp</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, app_math.o(i.APP_kalmanFilter_solderingTemp))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = APP_kalmanFilter_solderingTemp &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_GetAdcVlaue_soldering
</UL>

<P><STRONG><a name="[55]"></a>APP_shortCircuitProtection</STRONG> (Thumb, 374 bytes, Stack size 32 bytes, app_math.o(i.APP_shortCircuitProtection))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = APP_shortCircuitProtection &rArr; Drive_MosSwitch245_PWMOut &rArr; Drive_MosPWMoutMode &rArr;  APP_ErrorHandler (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_MosSwitch_OFF
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_MosSwitch245_PWMOut
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_MosSwitch210_PWMOut
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_Buz_OnOff
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_max_in_array
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_GetSolderingTid
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_GetAdcVlaue_electricity
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ErrorHandler
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_Lcd_SleepStateCheck_Task
</UL>

<P><STRONG><a name="[73]"></a>APP_solderingElectricity_Get</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, app_math.o(i.APP_solderingElectricity_Get))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = APP_solderingElectricity_Get &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_GetAdcVlaue_electricity
</UL>

<P><STRONG><a name="[76]"></a>Drive_ADCConvert</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, drive_adc.o(i.Drive_ADCConvert))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + In Cycle
<LI>Call Chain = Drive_ADCConvert &rArr;  APP_ErrorHandler (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Start
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_PollForConversion
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_GetValue
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConfigChannel
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ErrorHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_GetAdcVlaue_soldering
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_GetAdcVlaue_electricity
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_GetAdcVlaue_TID
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_GetAdcVlaue_NTC
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_Samp_electricity_Task
</UL>

<P><STRONG><a name="[7b]"></a>Drive_AdcConfig</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, drive_adc.o(i.Drive_AdcConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = Drive_AdcConfig &rArr; APP_ErrorHandler &rArr; APP_shortCircuitProtection &rArr; Drive_MosSwitch245_PWMOut &rArr; Drive_MosPWMoutMode &rArr;  APP_ErrorHandler (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Init
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Calibration_Start
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ErrorHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[7e]"></a>Drive_AdcGpio_init</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, drive_adc.o(i.Drive_AdcGpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Drive_AdcGpio_init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[80]"></a>Drive_BUTTON_GetState</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, drive_button.o(i.Drive_BUTTON_GetState))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Drive_BUTTON_GetState
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ButtonScan
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ButtonCheck_Task
</UL>

<P><STRONG><a name="[82]"></a>Drive_BUTTON_Init</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, drive_button.o(i.Drive_BUTTON_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Drive_BUTTON_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[83]"></a>Drive_BackLed_Init</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, drive_backled.o(i.Drive_BackLed_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Drive_BackLed_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[68]"></a>Drive_BackLed_OnOff</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, drive_backled.o(i.Drive_BackLed_OnOff))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Drive_BackLed_OnOff
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_Lcd_SleepStateCheck_Task
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_Encoder_Task
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ButtonCheck_Task
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SleepCloseBackLight_Task
</UL>

<P><STRONG><a name="[84]"></a>Drive_Buz_Init</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, drive_buz.o(i.Drive_Buz_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Drive_Buz_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[57]"></a>Drive_Buz_OnOff</STRONG> (Thumb, 242 bytes, Stack size 24 bytes, app_buzmusic.o(i.Drive_Buz_OnOff))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Drive_Buz_OnOff &rArr; get_buzzer_freq_by_temp &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchBuzzer_set
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_buzzer_freq_by_temp
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ErrorHandler
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_Encoder_TurnRightOrLeft
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ButtonDispose
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_shortCircuitProtection
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_SolderingTempDisplay
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_Lcd_SleepStateCheck_Task
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ButtonCheck_Task
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SleepCloseBackLight_Task
</UL>

<P><STRONG><a name="[87]"></a>Drive_DisplayLcd_Gpio_Init</STRONG> (Thumb, 108 bytes, Stack size 40 bytes, drive_desplaylcd.o(i.Drive_DisplayLcd_Gpio_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = Drive_DisplayLcd_Gpio_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[88]"></a>Drive_DisplayLcd_Init</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, drive_desplaylcd.o(i.Drive_DisplayLcd_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Drive_DisplayLcd_Init &rArr; Drive_DisplayLcd_SendCmd &rArr; DisplayLcd_CsColse
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_DisplayLcd_SendCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[56]"></a>Drive_DisplayLcd_sendData_Task</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, drive_desplaylcd.o(i.Drive_DisplayLcd_sendData_Task))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Drive_DisplayLcd_sendData_Task &rArr; Drive_DisplayLcd_sendMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_DisplayLcd_sendMessage
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_DisplayLcd_sendAddr
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_DisplayLcd_delay
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayLcd_CsColse
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ErrorHandler
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timeSlice_Task
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_Lcd_AllIcon_init
</UL>

<P><STRONG><a name="[8c]"></a>Drive_Encoder_Init</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, drive_encoder.o(i.Drive_Encoder_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Drive_Encoder_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[8f]"></a>Drive_FlashBlank</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, drive_flash.o(i.Drive_FlashBlank))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = Drive_FlashBlank &rArr; APP_ErrorHandler &rArr; APP_shortCircuitProtection &rArr; Drive_MosSwitch245_PWMOut &rArr; Drive_MosPWMoutMode &rArr;  APP_ErrorHandler (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ErrorHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_FlashSaveData_addr
</UL>

<P><STRONG><a name="[90]"></a>Drive_FlashErase</STRONG> (Thumb, 52 bytes, Stack size 32 bytes, drive_flash.o(i.Drive_FlashErase))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = Drive_FlashErase &rArr; APP_ErrorHandler &rArr; APP_shortCircuitProtection &rArr; Drive_MosSwitch245_PWMOut &rArr; Drive_MosPWMoutMode &rArr;  APP_ErrorHandler (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Erase
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ErrorHandler
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_FlashSaveData_addr
</UL>

<P><STRONG><a name="[93]"></a>Drive_FlashProgram</STRONG> (Thumb, 96 bytes, Stack size 160 bytes, drive_flash.o(i.Drive_FlashProgram))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = Drive_FlashProgram &rArr; APP_ErrorHandler &rArr; APP_shortCircuitProtection &rArr; Drive_MosSwitch245_PWMOut &rArr; Drive_MosPWMoutMode &rArr;  APP_ErrorHandler (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Program
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ErrorHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_FlashProgramWithCheck
</UL>

<P><STRONG><a name="[6a]"></a>Drive_FlashSaveData</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, drive_flash.o(i.Drive_FlashSaveData))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = Drive_FlashSaveData &rArr; Drive_FlashSaveData_addr &rArr; Drive_FlashProgramWithCheck &rArr; Drive_FlashProgram &rArr; APP_ErrorHandler &rArr; APP_shortCircuitProtection &rArr; Drive_MosSwitch245_PWMOut &rArr; Drive_MosPWMoutMode &rArr;  APP_ErrorHandler (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_FlashSaveData_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_FlashVerify
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ButtonDispose
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_TarTempSaveInFlash_Task
</UL>

<P><STRONG><a name="[97]"></a>Drive_FlashSaveData_addr</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, drive_flash.o(i.Drive_FlashSaveData_addr))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = Drive_FlashSaveData_addr &rArr; Drive_FlashProgramWithCheck &rArr; Drive_FlashProgram &rArr; APP_ErrorHandler &rArr; APP_shortCircuitProtection &rArr; Drive_MosSwitch245_PWMOut &rArr; Drive_MosPWMoutMode &rArr;  APP_ErrorHandler (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IWDG_Refresh
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Unlock
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Lock
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_FlashErase
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_FlashBlank
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_FlashProgramWithCheck
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_FlashSaveData
</UL>

<P><STRONG><a name="[9a]"></a>Drive_FlashSaveInit</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, drive_flash.o(i.Drive_FlashSaveInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 372<LI>Call Chain = Drive_FlashSaveInit &rArr; Drive_FlashVerify &rArr; Drive_FlashSaveData &rArr; Drive_FlashSaveData_addr &rArr; Drive_FlashProgramWithCheck &rArr; Drive_FlashProgram &rArr; APP_ErrorHandler &rArr; APP_shortCircuitProtection &rArr; Drive_MosSwitch245_PWMOut &rArr; Drive_MosPWMoutMode &rArr;  APP_ErrorHandler (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IWDG_Refresh
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_FlashVerify
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[9e]"></a>Drive_Iwdg_init</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, drive_iwdg.o(i.Drive_Iwdg_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = Drive_Iwdg_init &rArr; APP_ErrorHandler &rArr; APP_shortCircuitProtection &rArr; Drive_MosSwitch245_PWMOut &rArr; Drive_MosPWMoutMode &rArr;  APP_ErrorHandler (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IWDG_Init
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ErrorHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[a0]"></a>Drive_Lcd_AllIcon_init</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, app_displaylcd.o(i.Drive_Lcd_AllIcon_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Drive_Lcd_AllIcon_init &rArr; Drive_DisplayLcd_sendData_Task &rArr; Drive_DisplayLcd_sendMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_DisplayLcd_sendData_Task
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_smgUp3_SetNum
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_smgDowm3_SetNum
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_icon_onOff
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[72]"></a>Drive_MosSwitch210_PWMOut</STRONG> (Thumb, 64 bytes, Stack size 40 bytes, drive_mosswitch.o(i.Drive_MosSwitch210_PWMOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = Drive_MosSwitch210_PWMOut &rArr; Drive_MosPWMoutMode &rArr;  APP_ErrorHandler (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_MosPWMoutMode
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_shortCircuitProtection
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pid_iCmd
</UL>

<P><STRONG><a name="[71]"></a>Drive_MosSwitch245_PWMOut</STRONG> (Thumb, 66 bytes, Stack size 40 bytes, drive_mosswitch.o(i.Drive_MosSwitch245_PWMOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = Drive_MosSwitch245_PWMOut &rArr; Drive_MosPWMoutMode &rArr;  APP_ErrorHandler (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_MosPWMoutMode
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_shortCircuitProtection
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pid_iCmd
</UL>

<P><STRONG><a name="[4f]"></a>Drive_MosSwitch_OFF</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, drive_mosswitch.o(i.Drive_MosSwitch_OFF))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Drive_MosSwitch_OFF &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ErrorHandler
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_shortCircuitProtection
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_GetAdcVlaue_soldering
</UL>

<P><STRONG><a name="[10e]"></a>Drive_MosSwitch_SetDuty</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, drive_mosswitch.o(i.Drive_MosSwitch_SetDuty))
<BR><BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pidControl
</UL>

<P><STRONG><a name="[a6]"></a>Drive_Sleep_GetState</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, drive_button.o(i.Drive_Sleep_GetState))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Drive_Sleep_GetState
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_Lcd_SleepStateCheck_Task
</UL>

<P><STRONG><a name="[a7]"></a>Drive_SystemClockConfig</STRONG> (Thumb, 98 bytes, Stack size 64 bytes, drive_clock.o(i.Drive_SystemClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = Drive_SystemClockConfig &rArr; APP_ErrorHandler &rArr; APP_shortCircuitProtection &rArr; Drive_MosSwitch245_PWMOut &rArr; Drive_MosPWMoutMode &rArr;  APP_ErrorHandler (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ErrorHandler
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[12]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, drive_encoder.o(i.EXTI4_15_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EXTI4_15_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(RESET)
</UL>
<P><STRONG><a name="[ac]"></a>FIR_LowpassFilter</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, app_math.o(i.FIR_LowpassFilter))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = FIR_LowpassFilter &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLoadCurrent
</UL>

<P><STRONG><a name="[af]"></a>GetLoadCurrent</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, app_math.o(i.GetLoadCurrent))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = GetLoadCurrent &rArr; APP_KalmanFilter_Ele &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LimitFilter
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIR_LowpassFilter
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_KalmanFilter_Ele
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;median_filter
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_Samp_electricity_Task
</UL>

<P><STRONG><a name="[b2]"></a>HAL_ADC_Calibration_SingleStart</STRONG> (Thumb, 158 bytes, Stack size 32 bytes, py32f0xx_hal_adc.o(i.HAL_ADC_Calibration_SingleStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_ADC_Calibration_SingleStart
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Calibration_Start
</UL>

<P><STRONG><a name="[7c]"></a>HAL_ADC_Calibration_Start</STRONG> (Thumb, 76 bytes, Stack size 64 bytes, py32f0xx_hal_adc.o(i.HAL_ADC_Calibration_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = HAL_ADC_Calibration_Start &rArr; HAL_ADC_Calibration_SingleStart
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Calibration_SingleStart
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_QuickSort
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_AdcConfig
</UL>

<P><STRONG><a name="[77]"></a>HAL_ADC_ConfigChannel</STRONG> (Thumb, 262 bytes, Stack size 24 bytes, py32f0xx_hal_adc.o(i.HAL_ADC_ConfigChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_ADC_ConfigChannel
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_ADCConvert
</UL>

<P><STRONG><a name="[7a]"></a>HAL_ADC_GetValue</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, py32f0xx_hal_adc.o(i.HAL_ADC_GetValue))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_ADCConvert
</UL>

<P><STRONG><a name="[7d]"></a>HAL_ADC_Init</STRONG> (Thumb, 350 bytes, Stack size 24 bytes, py32f0xx_hal_adc.o(i.HAL_ADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = HAL_ADC_Init &rArr; HAL_ADC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_AdcConfig
</UL>

<P><STRONG><a name="[b4]"></a>HAL_ADC_MspInit</STRONG> (Thumb, 148 bytes, Stack size 40 bytes, py32f0xx_hal_msp.o(i.HAL_ADC_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = HAL_ADC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_DeInit
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSCFG_DMA_Req
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Init
</UL>

<P><STRONG><a name="[79]"></a>HAL_ADC_PollForConversion</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, py32f0xx_hal_adc.o(i.HAL_ADC_PollForConversion))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_ADC_PollForConversion
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_ADCConvert
</UL>

<P><STRONG><a name="[78]"></a>HAL_ADC_Start</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, py32f0xx_hal_adc.o(i.HAL_ADC_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_ADC_Start &rArr; ADC_Enable
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_ADCConvert
</UL>

<P><STRONG><a name="[b6]"></a>HAL_DMA_DeInit</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, py32f0xx_hal_dma.o(i.HAL_DMA_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_MspInit
</UL>

<P><STRONG><a name="[b7]"></a>HAL_DMA_Init</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, py32f0xx_hal_dma.o(i.HAL_DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_MspInit
</UL>

<P><STRONG><a name="[58]"></a>HAL_Delay</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, py32f0xx_hal.o(i.HAL_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ErrorHandler
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[92]"></a>HAL_FLASH_Erase</STRONG> (Thumb, 408 bytes, Stack size 24 bytes, py32f0xx_hal_flash.o(i.HAL_FLASH_Erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_FLASH_Erase &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SectorErase
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_PageErase
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_MassErase
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_FlashErase
</UL>

<P><STRONG><a name="[99]"></a>HAL_FLASH_Lock</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, py32f0xx_hal_flash.o(i.HAL_FLASH_Lock))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_FlashSaveData_addr
</UL>

<P><STRONG><a name="[94]"></a>HAL_FLASH_Program</STRONG> (Thumb, 246 bytes, Stack size 32 bytes, py32f0xx_hal_flash.o(i.HAL_FLASH_Program))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Program_Page
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_FlashProgram
</UL>

<P><STRONG><a name="[98]"></a>HAL_FLASH_Unlock</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, py32f0xx_hal_flash.o(i.HAL_FLASH_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_FlashSaveData_addr
</UL>

<P><STRONG><a name="[7f]"></a>HAL_GPIO_Init</STRONG> (Thumb, 268 bytes, Stack size 20 bytes, py32f0xx_hal_gpio.o(i.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_BackLed_Init
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_DisplayLcd_Gpio_Init
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_MosSwitch_OFF
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_MosSwitch245_PWMOut
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_MosSwitch210_PWMOut
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_Encoder_Init
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_Buz_Init
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_BUTTON_Init
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_AdcGpio_init
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_MspInit
</UL>

<P><STRONG><a name="[81]"></a>HAL_GPIO_ReadPin</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, py32f0xx_hal_gpio.o(i.HAL_GPIO_ReadPin))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_Sleep_GetState
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_BUTTON_GetState
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_Samp_electricity_Task
</UL>

<P><STRONG><a name="[6e]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, py32f0xx_hal_gpio.o(i.HAL_GPIO_WritePin))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_BackLed_OnOff
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_BackLed_Init
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_DisplayLcd_sendData_Task
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_DisplayLcd_Gpio_Init
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_DisplayLcd_sendMessage
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_DisplayLcd_sendAddr
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_DisplayLcd_SendCmd
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayLcd_CsColse
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_MosSwitch_OFF
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_Buz_Init
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchBuzzerSpeak_L1
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchBuzzerSpeak_Freq
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_beep
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_shortCircuitProtection
</UL>

<P><STRONG><a name="[ae]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, py32f0xx_hal.o(i.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IWDG_Init
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_PollForConversion
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Calibration_SingleStart
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>

<P><STRONG><a name="[9f]"></a>HAL_IWDG_Init</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, py32f0xx_hal_iwdg.o(i.HAL_IWDG_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_IWDG_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_Iwdg_init
</UL>

<P><STRONG><a name="[52]"></a>HAL_IWDG_Refresh</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, py32f0xx_hal_iwdg.o(i.HAL_IWDG_Refresh))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_FlashSaveInit
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_FlashSaveData_addr
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ErrorHandler
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timeSlice_Task
</UL>

<P><STRONG><a name="[db]"></a>HAL_IncTick</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, py32f0xx_hal.o(i.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[bc]"></a>HAL_Init</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, py32f0xx_hal.o(i.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[bd]"></a>HAL_InitTick</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, py32f0xx_hal.o(i.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[be]"></a>HAL_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, py32f0xx_hal_msp.o(i.HAL_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[8d]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, py32f0xx_hal_cortex.o(i.HAL_NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_Encoder_Init
</UL>

<P><STRONG><a name="[8e]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, py32f0xx_hal_cortex.o(i.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_Encoder_Init
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[a9]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 320 bytes, Stack size 24 bytes, py32f0xx_hal_rcc.o(i.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_SystemClockConfig
</UL>

<P><STRONG><a name="[c1]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, py32f0xx_hal_rcc.o(i.HAL_RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[a8]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 550 bytes, Stack size 24 bytes, py32f0xx_hal_rcc.o(i.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_RCC_OscConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_SystemClockConfig
</UL>

<P><STRONG><a name="[b5]"></a>HAL_SYSCFG_DMA_Req</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, py32f0xx_hal.o(i.HAL_SYSCFG_DMA_Req))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_MspInit
</UL>

<P><STRONG><a name="[bf]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, py32f0xx_hal_cortex.o(i.HAL_SYSTICK_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SYSTICK_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[aa]"></a>HAL_TIM_Base_Init</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, py32f0xx_hal_tim.o(i.HAL_TIM_Base_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_TIM_Base_Init &rArr; TIM_Base_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_TIM3_INIT
</UL>

<P><STRONG><a name="[c3]"></a>HAL_TIM_Base_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, py32f0xx_hal_tim.o(i.HAL_TIM_Base_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[ab]"></a>HAL_TIM_PWM_ConfigChannel</STRONG> (Thumb, 224 bytes, Stack size 24 bytes, py32f0xx_hal_tim.o(i.HAL_TIM_PWM_ConfigChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HAL_TIM_PWM_ConfigChannel &rArr; TIM_OC3_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC4_SetConfig
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3_SetConfig
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1_SetConfig
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_TIM3_PWM
</UL>

<P><STRONG><a name="[a5]"></a>HAL_TIM_PWM_Start</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, py32f0xx_hal_tim.o(i.HAL_TIM_PWM_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_TIM_PWM_Start &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxChannelCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_MosPWMoutMode
</UL>

<P><STRONG><a name="[dc]"></a>HAL_UART_ErrorCallback</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, drive_uart.o(i.HAL_UART_ErrorCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_UART_ErrorCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[7]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, py32f0xx_it.o(i.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>Lcd_icon_onOff</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, app_displaylcd.o(i.Lcd_icon_onOff))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Lcd_icon_onOff &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_icon_temp_onOff
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_icon_soldering_onOff
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_icon_cup_onOff
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_icon_SET_onOff
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_icon_400Temp_onOff
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_icon_350Temp_onOff
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_icon_300Temp_onOff
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ErrorHandler
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_LcdBlink
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_joinSeting_Lcd
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_exitSeting_Lcd
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_Lcd_DisplayPNumber_SettingPage
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_LcdCommonMode
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_Lcd_SolderingIcon_Blink_Task
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_Lcd_SleepStateCheck_Task
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_Lcd_AllIcon_init
</UL>

<P><STRONG><a name="[d4]"></a>Lcd_smgDowm3_DisplayOnOff</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, app_displaylcd.o(i.Lcd_smgDowm3_DisplayOnOff))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Lcd_smgDowm3_DisplayOnOff &rArr; Lcd_RawArrayTurnForVideoMemory_Dowm3
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_smgDowm3_Close
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_RawArrayTurnForVideoMemory_Dowm3
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_DisplayOnOff_D3
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_joinSeting_Lcd
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_Lcd_DisplayPNumber_SettingPage
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_EncoderSetData_LcdSettingPage
</UL>

<P><STRONG><a name="[54]"></a>Lcd_smgDowm3_SetErrorNum</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, app_displaylcd.o(i.Lcd_smgDowm3_SetErrorNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Lcd_smgDowm3_SetErrorNum &rArr; Lcd_RawArrayTurnForVideoMemory_Dowm3
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_smgDowm3_Close
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_RawArrayTurnForVideoMemory_Dowm3
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ErrorHandler
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_SolderingTempDisplay
</UL>

<P><STRONG><a name="[d8]"></a>Lcd_smgDowm3_SetNimus</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, app_displaylcd.o(i.Lcd_smgDowm3_SetNimus))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Lcd_smgDowm3_SetNimus &rArr; Lcd_SetNimus_D3 &rArr; Lcd_smgDowm3_SetNum &rArr; Lcd_RawArrayTurnForVideoMemory_Dowm3
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_smgDowm3_Close
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_SetNimus_D3
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_RawArrayTurnForVideoMemory_Dowm3
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_joinSeting_Lcd
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_Lcd_DisplayPNumber_SettingPage
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_EncoderSetData_LcdSettingPage
</UL>

<P><STRONG><a name="[a1]"></a>Lcd_smgDowm3_SetNum</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, app_displaylcd.o(i.Lcd_smgDowm3_SetNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Lcd_smgDowm3_SetNum &rArr; Lcd_RawArrayTurnForVideoMemory_Dowm3
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_smgDowm3_Close
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_SetNum_D3
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_RawArrayTurnForVideoMemory_Dowm3
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_SolderingTempDisplay
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_Lcd_AllIcon_init
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_SetNimus_D3
</UL>

<P><STRONG><a name="[51]"></a>Lcd_smgUp3_SetNum</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, app_displaylcd.o(i.Lcd_smgUp3_SetNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Lcd_smgUp3_SetNum &rArr; Lcd_RawArrayTurnForVideoMemory_Up3
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_RawArrayTurnForVideoMemory_Up3
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ErrorHandler
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_exitSeting_Lcd
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_LcdCommonMode
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_Lcd_AllIcon_init
</UL>

<P><STRONG><a name="[da]"></a>Lcd_smgUp3_SetPNum</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, app_displaylcd.o(i.Lcd_smgUp3_SetPNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Lcd_smgUp3_SetPNum &rArr; Lcd_RawArrayTurnForVideoMemory_Up3
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_RawArrayTurnForVideoMemory_Up3
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_joinSeting_Lcd
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_Lcd_DisplayPNumber_SettingPage
</UL>

<P><STRONG><a name="[b0]"></a>LimitFilter</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, app_math.o(i.LimitFilter))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LimitFilter &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLoadCurrent
</UL>

<P><STRONG><a name="[6]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, py32f0xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, py32f0xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, py32f0xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, py32f0xx_it.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>SystemInit</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, system_py32f0xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(.text)
</UL>
<P><STRONG><a name="[c4]"></a>TIM_Base_SetConfig</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, py32f0xx_hal_tim.o(i.TIM_Base_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[c9]"></a>TIM_CCxChannelCmd</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, py32f0xx_hal_tim.o(i.TIM_CCxChannelCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_CCxChannelCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Start
</UL>

<P><STRONG><a name="[c6]"></a>TIM_OC2_SetConfig</STRONG> (Thumb, 116 bytes, Stack size 20 bytes, py32f0xx_hal_tim.o(i.TIM_OC2_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_OC2_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
</UL>

<P><STRONG><a name="[1f]"></a>USART1_IRQHandler</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, drive_uart.o(i.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART1_IRQHandler &rArr; HAL_UART_ErrorCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f003xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>__ARM_common_switch8</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, py32f0xx_hal_dma.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ErrorHandler
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchBuzzer_set
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_joinSeting_Lcd
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_Lcd_DisplayPNumber_SettingPage
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_EncoderSetData_LcdSettingPage
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_Buz_OnOff
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_SolderingTempDisplay
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_Buz_Task
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_icon_onOff
</UL>

<P><STRONG><a name="[dd]"></a>app_ButtonCheck_Task</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, app_coder.o(i.app_ButtonCheck_Task))
<BR><BR>[Stack]<UL><LI>Max Depth = 372<LI>Call Chain = app_ButtonCheck_Task &rArr; app_ButtonDispose &rArr; Drive_FlashSaveData &rArr; Drive_FlashSaveData_addr &rArr; Drive_FlashProgramWithCheck &rArr; Drive_FlashProgram &rArr; APP_ErrorHandler &rArr; APP_shortCircuitProtection &rArr; Drive_MosSwitch245_PWMOut &rArr; Drive_MosPWMoutMode &rArr;  APP_ErrorHandler (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_BackLed_OnOff
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_BUTTON_GetState
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ButtonScan
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ButtonDispose
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_Buz_OnOff
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timeSlice_Task
</UL>

<P><STRONG><a name="[de]"></a>app_ButtonScan</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, app_coder.o(i.app_ButtonScan))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_ButtonScan &rArr; Drive_BUTTON_GetState
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_BUTTON_GetState
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ButtonCheck_Task
</UL>

<P><STRONG><a name="[e3]"></a>app_Buz_Task</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, app_buzmusic.o(i.app_Buz_Task))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_Buz_Task &rArr; touchBuzzerSpeak_alarm &rArr; set_beep &rArr; set_buzHz
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchBuzzerSpeak_silasofamirodo
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchBuzzerSpeak_mirodo
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchBuzzerSpeak_doromifasolasi
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchBuzzerSpeak_doromi
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchBuzzerSpeak_dongding
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchBuzzerSpeak_dingdongdiangdang
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchBuzzerSpeak_dingdong
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchBuzzerSpeak_alarm
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchBuzzerSpeak_20Ms
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchBuzzerSpeak_1S
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timeSlice_Task
</UL>

<P><STRONG><a name="[ee]"></a>app_DisplayFilter_RC</STRONG> (Thumb, 232 bytes, Stack size 48 bytes, app_math.o(i.app_DisplayFilter_RC))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = app_DisplayFilter_RC &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_GetAdcVlaue_soldering
</UL>

<P><STRONG><a name="[ef]"></a>app_DisplayFilter_kalman</STRONG> (Thumb, 250 bytes, Stack size 32 bytes, app_math.o(i.app_DisplayFilter_kalman))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = app_DisplayFilter_kalman &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_GetAdcVlaue_soldering
</UL>

<P><STRONG><a name="[f1]"></a>app_EncoderSetData_LcdSettingPage</STRONG> (Thumb, 212 bytes, Stack size 16 bytes, app_hci.o(i.app_EncoderSetData_LcdSettingPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = app_EncoderSetData_LcdSettingPage &rArr; Lcd_smgDowm3_SetNimus &rArr; Lcd_SetNimus_D3 &rArr; Lcd_smgDowm3_SetNum &rArr; Lcd_RawArrayTurnForVideoMemory_Dowm3
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_smgDowm3_SetNimus
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_smgDowm3_DisplayOnOff
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_Encoder_TurnRightOrLeft
</UL>

<P><STRONG><a name="[fe]"></a>app_Encoder_FastSetTemp</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, app_hci.o(i.app_Encoder_FastSetTemp))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_Encoder_FastSetTemp
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_LcdCommonMode
</UL>

<P><STRONG><a name="[f2]"></a>app_Encoder_Task</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, app_coder.o(i.app_Encoder_Task))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = app_Encoder_Task &rArr; app_Encoder_TurnRightOrLeft &rArr; app_EncoderSetData_LcdSettingPage &rArr; Lcd_smgDowm3_SetNimus &rArr; Lcd_SetNimus_D3 &rArr; Lcd_smgDowm3_SetNum &rArr; Lcd_RawArrayTurnForVideoMemory_Dowm3
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_BackLed_OnOff
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_Encoder_TurnRightOrLeft
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timeSlice_Task
</UL>

<P><STRONG><a name="[f7]"></a>app_GetAdcVlaue_electricity_Task</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, app_math.o(i.app_GetAdcVlaue_electricity_Task))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = app_GetAdcVlaue_electricity_Task &rArr; APP_GetElectricity_soft_Task &rArr; APP_KalmanFilter_Power &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetElectricity_soft_Task
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timeSlice_Task
</UL>

<P><STRONG><a name="[fc]"></a>app_IconBlink_Task</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, app_hci.o(i.app_IconBlink_Task))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_IconBlink_Task &rArr; app_LcdBlink &rArr; Lcd_icon_onOff &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_LcdBlink
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timeSlice_Task
</UL>

<P><STRONG><a name="[f4]"></a>app_LcdCommonMode</STRONG> (Thumb, 158 bytes, Stack size 16 bytes, app_hci.o(i.app_LcdCommonMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_LcdCommonMode &rArr; Lcd_smgUp3_SetNum &rArr; Lcd_RawArrayTurnForVideoMemory_Up3
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_Encoder_FastSetTemp
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_smgUp3_SetNum
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_icon_onOff
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_Encoder_TurnRightOrLeft
</UL>

<P><STRONG><a name="[e2]"></a>app_Lcd_DisplayPNumber_SettingPage</STRONG> (Thumb, 200 bytes, Stack size 8 bytes, app_hci.o(i.app_Lcd_DisplayPNumber_SettingPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = app_Lcd_DisplayPNumber_SettingPage &rArr; Lcd_smgDowm3_SetNimus &rArr; Lcd_SetNimus_D3 &rArr; Lcd_smgDowm3_SetNum &rArr; Lcd_RawArrayTurnForVideoMemory_Dowm3
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_smgUp3_SetPNum
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_smgDowm3_SetNimus
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_smgDowm3_DisplayOnOff
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_icon_onOff
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ButtonDispose
</UL>

<P><STRONG><a name="[ff]"></a>app_Lcd_SleepStateCheck_Task</STRONG> (Thumb, 206 bytes, Stack size 24 bytes, app_hci.o(i.app_Lcd_SleepStateCheck_Task))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = app_Lcd_SleepStateCheck_Task &rArr; APP_shortCircuitProtection &rArr; Drive_MosSwitch245_PWMOut &rArr; Drive_MosPWMoutMode &rArr;  APP_ErrorHandler (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_BackLed_OnOff
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_Sleep_GetState
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_Buz_OnOff
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_shortCircuitProtection
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pidOutCmd
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_icon_onOff
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timeSlice_Task
</UL>

<P><STRONG><a name="[101]"></a>app_Lcd_SolderingIcon_Blink_Task</STRONG> (Thumb, 212 bytes, Stack size 24 bytes, app_hci.o(i.app_Lcd_SolderingIcon_Blink_Task))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = app_Lcd_SolderingIcon_Blink_Task &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_icon_onOff
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timeSlice_Task
</UL>

<P><STRONG><a name="[105]"></a>app_PcbTempProtect_Task</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, app_math.o(i.app_PcbTempProtect_Task))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = app_PcbTempProtect_Task &rArr; APP_ErrorHandler &rArr; APP_shortCircuitProtection &rArr; Drive_MosSwitch245_PWMOut &rArr; Drive_MosPWMoutMode &rArr;  APP_ErrorHandler (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ErrorHandler
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_GetAdcVlaue_NTC
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timeSlice_Task
</UL>

<P><STRONG><a name="[106]"></a>app_Samp_electricity_Task</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, app_math.o(i.app_Samp_electricity_Task))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = app_Samp_electricity_Task &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_ADCConvert
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLoadCurrent
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timeSlice_Task
</UL>

<P><STRONG><a name="[10a]"></a>app_SolderingTempDisplay</STRONG> (Thumb, 228 bytes, Stack size 32 bytes, app_hci.o(i.app_SolderingTempDisplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = app_SolderingTempDisplay &rArr; Drive_Buz_OnOff &rArr; get_buzzer_freq_by_temp &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_Buz_OnOff
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_smgDowm3_SetNum
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_smgDowm3_SetErrorNum
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timeSlice_Task
</UL>

<P><STRONG><a name="[e0]"></a>app_exitSeting_Lcd</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, app_hci.o(i.app_exitSeting_Lcd))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = app_exitSeting_Lcd &rArr; Lcd_smgUp3_SetNum &rArr; Lcd_RawArrayTurnForVideoMemory_Up3
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_smgUp3_SetNum
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_icon_onOff
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ButtonDispose
</UL>

<P><STRONG><a name="[e1]"></a>app_joinSeting_Lcd</STRONG> (Thumb, 180 bytes, Stack size 8 bytes, app_hci.o(i.app_joinSeting_Lcd))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = app_joinSeting_Lcd &rArr; Lcd_smgDowm3_SetNimus &rArr; Lcd_SetNimus_D3 &rArr; Lcd_smgDowm3_SetNum &rArr; Lcd_RawArrayTurnForVideoMemory_Dowm3
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_smgUp3_SetPNum
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_smgDowm3_SetNimus
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_smgDowm3_DisplayOnOff
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_icon_onOff
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ButtonDispose
</UL>

<P><STRONG><a name="[10b]"></a>app_pidControl</STRONG> (Thumb, 252 bytes, Stack size 32 bytes, app_pid.o(i.app_pidControl))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = app_pidControl &rArr; app_pid_iCmd &rArr; Drive_MosSwitch245_PWMOut &rArr; Drive_MosPWMoutMode &rArr;  APP_ErrorHandler (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_MosSwitch_SetDuty
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pid_iCmd
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pid_PCmd
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pid_Task
</UL>

<P><STRONG><a name="[100]"></a>app_pidOutCmd</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, app_pid.o(i.app_pidOutCmd))
<BR><BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pid_iCmd
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_Lcd_SleepStateCheck_Task
</UL>

<P><STRONG><a name="[10f]"></a>app_pid_Task</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, app_math.o(i.app_pid_Task))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = app_pid_Task &rArr; app_pidControl &rArr; app_pid_iCmd &rArr; Drive_MosSwitch245_PWMOut &rArr; Drive_MosPWMoutMode &rArr;  APP_ErrorHandler (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_GetAdcVlaue_soldering
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pidControl
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timeSlice_Task
</UL>

<P><STRONG><a name="[f9]"></a>app_solderingT115_adcTurnToTemp</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, app_math.o(i.app_solderingT115_adcTurnToTemp))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = app_solderingT115_adcTurnToTemp &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;square_3
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;square_2
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_GetAdcVlaue_soldering
</UL>

<P><STRONG><a name="[fa]"></a>app_solderingT210_adcTurnToTemp</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, app_math.o(i.app_solderingT210_adcTurnToTemp))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = app_solderingT210_adcTurnToTemp &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;square_3
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;square_2
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_GetAdcVlaue_soldering
</UL>

<P><STRONG><a name="[fb]"></a>app_soldering_T12_adcTurnToTemp</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, app_math.o(i.app_soldering_T12_adcTurnToTemp))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = app_soldering_T12_adcTurnToTemp &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_GetAdcVlaue_soldering
</UL>

<P><STRONG><a name="[111]"></a>app_timeSlice_Task</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, app_timeslice.o(i.app_timeSlice_Task))
<BR><BR>[Stack]<UL><LI>Max Depth = 388<LI>Call Chain = app_timeSlice_Task &rArr; app_ButtonCheck_Task &rArr; app_ButtonDispose &rArr; Drive_FlashSaveData &rArr; Drive_FlashSaveData_addr &rArr; Drive_FlashProgramWithCheck &rArr; Drive_FlashProgram &rArr; APP_ErrorHandler &rArr; APP_shortCircuitProtection &rArr; Drive_MosSwitch245_PWMOut &rArr; Drive_MosPWMoutMode &rArr;  APP_ErrorHandler (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IWDG_Refresh
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_DisplayLcd_sendData_Task
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pid_Task
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_SolderingTempDisplay
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_Samp_electricity_Task
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_PcbTempProtect_Task
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_Lcd_SolderingIcon_Blink_Task
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_Lcd_SleepStateCheck_Task
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_IconBlink_Task
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_GetAdcVlaue_electricity_Task
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_Encoder_Task
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_Buz_Task
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ButtonCheck_Task
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_TarTempSaveInFlash_Task
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SleepCloseBackLight_Task
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Power_complementaryFilter_Task
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[5a]"></a>arm_fir_f32</STRONG> (Thumb, 136 bytes, Stack size 56 bytes, arm_fir_f32.o(i.arm_fir_f32))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = arm_fir_f32 &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FirFilter_NtcTemp
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FirFilter_ADC
</UL>

<P><STRONG><a name="[4b]"></a>$Super$$main</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 388<LI>Call Chain = $Super$$main &rArr; app_timeSlice_Task &rArr; app_ButtonCheck_Task &rArr; app_ButtonDispose &rArr; Drive_FlashSaveData &rArr; Drive_FlashSaveData_addr &rArr; Drive_FlashProgramWithCheck &rArr; Drive_FlashProgram &rArr; APP_ErrorHandler &rArr; APP_shortCircuitProtection &rArr; Drive_MosSwitch245_PWMOut &rArr; Drive_MosPWMoutMode &rArr;  APP_ErrorHandler (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_FlashSaveInit
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_Iwdg_init
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_BackLed_Init
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_DisplayLcd_Init
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_DisplayLcd_Gpio_Init
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_MosSwitch_OFF
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_Encoder_Init
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_Buz_Init
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_BUTTON_Init
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_SystemClockConfig
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_AdcGpio_init
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_AdcConfig
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_Buz_OnOff
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_shortCircuitProtection
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timeSlice_Task
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_Lcd_AllIcon_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[61]"></a>__aeabi_fadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub.o(x$fpl$fadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_fir_f32
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_DisplayFilter_kalman
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_DisplayFilter_RC
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIR_LowpassFilter
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_kalmanFilter_solderingTemp
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_PcbNtc_adcTurnToTemp
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_KalmanFilter_Power
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_KalmanFilter_Ele
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pidControl
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Power_complementaryFilter_Task
</UL>

<P><STRONG><a name="[117]"></a>_fadd</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, faddsub.o(x$fpl$fadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub1
</UL>

<P><STRONG><a name="[103]"></a>__aeabi_cfcmple</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, flef.o(x$fpl$fleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_cfcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pid_iCmd
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_Lcd_SolderingIcon_Blink_Task
</UL>

<P><STRONG><a name="[119]"></a>_fcmple</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, flef.o(x$fpl$fleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
</UL>

<P><STRONG><a name="[5e]"></a>__aeabi_fmul</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_fir_f32
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_DisplayFilter_kalman
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_DisplayFilter_RC
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LimitFilter
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLoadCurrent
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIR_LowpassFilter
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_solderingElectricity_Get
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_kalmanFilter_solderingTemp
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_PcbNtc_adcTurnToTemp
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_KalmanFilter_Power
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_KalmanFilter_Ele
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetElectricity_soft_Task
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;square_3
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;square_2
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pidControl
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pid_PCmd
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_Lcd_SolderingIcon_Blink_Task
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Power_complementaryFilter_Task
</UL>

<P><STRONG><a name="[15b]"></a>_fmul</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul), UNUSED)

<P><STRONG><a name="[104]"></a>__aeabi_cfrcmple</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, frlef.o(x$fpl$frleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_cfrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pidControl
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pid_iCmd
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_Lcd_SolderingIcon_Blink_Task
</UL>

<P><STRONG><a name="[11a]"></a>_frcmple</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, frlef.o(x$fpl$frleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
</UL>

<P><STRONG><a name="[102]"></a>__aeabi_frsub</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub.o(x$fpl$frsb))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_frsub
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_SolderingTempDisplay
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_Lcd_SolderingIcon_Blink_Task
</UL>

<P><STRONG><a name="[11b]"></a>_frsb</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, faddsub.o(x$fpl$frsb), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub1
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
</UL>

<P><STRONG><a name="[62]"></a>__aeabi_fsub</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub.o(x$fpl$fsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fsub
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_DisplayFilter_kalman
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_DisplayFilter_RC
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_kalmanFilter_solderingTemp
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_KalmanFilter_Power
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_KalmanFilter_Ele
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pidControl
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pid_PCmd
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_Lcd_SolderingIcon_Blink_Task
</UL>

<P><STRONG><a name="[11d]"></a>_fsub</STRONG> (Thumb, 204 bytes, Stack size 16 bytes, faddsub.o(x$fpl$fsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[a2]"></a>Drive_MosPWMoutMode</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, drive_mosswitch.o(i.Drive_MosPWMoutMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + In Cycle
<LI>Call Chain = Drive_MosPWMoutMode &rArr;  APP_ErrorHandler (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_TIM3_PWM
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_TIM3_INIT
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Start
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ErrorHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_MosSwitch245_PWMOut
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_MosSwitch210_PWMOut
</UL>

<P><STRONG><a name="[a3]"></a>Drive_TIM3_INIT</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, drive_mosswitch.o(i.Drive_TIM3_INIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + In Cycle
<LI>Call Chain = Drive_TIM3_INIT &rArr;  APP_ErrorHandler (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ErrorHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_MosPWMoutMode
</UL>

<P><STRONG><a name="[a4]"></a>Drive_TIM3_PWM</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, drive_mosswitch.o(i.Drive_TIM3_PWM))
<BR><BR>[Stack]<UL><LI>Max Depth = 52 + In Cycle
<LI>Call Chain = Drive_TIM3_PWM &rArr;  APP_ErrorHandler (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ErrorHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_MosPWMoutMode
</UL>

<P><STRONG><a name="[74]"></a>DisplayLcd_CsColse</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, drive_desplaylcd.o(i.DisplayLcd_CsColse))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DisplayLcd_CsColse
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_DisplayLcd_delay
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_DisplayLcd_sendData_Task
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_DisplayLcd_SendCmd
</UL>

<P><STRONG><a name="[89]"></a>Drive_DisplayLcd_SendCmd</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, drive_desplaylcd.o(i.Drive_DisplayLcd_SendCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Drive_DisplayLcd_SendCmd &rArr; DisplayLcd_CsColse
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_DisplayLcd_delay
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayLcd_CsColse
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_DisplayLcd_Init
</UL>

<P><STRONG><a name="[75]"></a>Drive_DisplayLcd_delay</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, drive_desplaylcd.o(i.Drive_DisplayLcd_delay))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_DisplayLcd_sendData_Task
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_DisplayLcd_sendMessage
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_DisplayLcd_sendAddr
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_DisplayLcd_SendCmd
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayLcd_CsColse
</UL>

<P><STRONG><a name="[8a]"></a>Drive_DisplayLcd_sendAddr</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, drive_desplaylcd.o(i.Drive_DisplayLcd_sendAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Drive_DisplayLcd_sendAddr
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_DisplayLcd_delay
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_DisplayLcd_sendData_Task
</UL>

<P><STRONG><a name="[8b]"></a>Drive_DisplayLcd_sendMessage</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, drive_desplaylcd.o(i.Drive_DisplayLcd_sendMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Drive_DisplayLcd_sendMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_DisplayLcd_delay
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_DisplayLcd_sendData_Task
</UL>

<P><STRONG><a name="[95]"></a>Drive_FlashProgramWithCheck</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, drive_flash.o(i.Drive_FlashProgramWithCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = Drive_FlashProgramWithCheck &rArr; Drive_FlashProgram &rArr; APP_ErrorHandler &rArr; APP_shortCircuitProtection &rArr; Drive_MosSwitch245_PWMOut &rArr; Drive_MosPWMoutMode &rArr;  APP_ErrorHandler (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_FlashProgram
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_FlashSaveData_addr
</UL>

<P><STRONG><a name="[9d]"></a>Drive_FlashRed</STRONG> (Thumb, 146 bytes, Stack size 8 bytes, drive_flash.o(i.Drive_FlashRed))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Drive_FlashRed
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_FlashVerify
</UL>

<P><STRONG><a name="[9b]"></a>Drive_FlashVerify</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, drive_flash.o(i.Drive_FlashVerify))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = Drive_FlashVerify &rArr; Drive_FlashSaveData &rArr; Drive_FlashSaveData_addr &rArr; Drive_FlashProgramWithCheck &rArr; Drive_FlashProgram &rArr; APP_ErrorHandler &rArr; APP_shortCircuitProtection &rArr; Drive_MosSwitch245_PWMOut &rArr; Drive_MosPWMoutMode &rArr;  APP_ErrorHandler (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_FlashSaveData
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_getMaxOfnum
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_FlashRed
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_FlashSaveInit
</UL>

<P><STRONG><a name="[9c]"></a>app_getMaxOfnum</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, drive_flash.o(i.app_getMaxOfnum))
<BR><BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_FlashVerify
</UL>

<P><STRONG><a name="[4c]"></a>ADC_Enable</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, py32f0xx_hal_adc.o(i.ADC_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_Enable
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Start
</UL>

<P><STRONG><a name="[b3]"></a>ADC_QuickSort</STRONG> (Thumb, 54 bytes, Stack size 20 bytes, py32f0xx_hal_adc.o(i.ADC_QuickSort))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ADC_QuickSort
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Calibration_Start
</UL>

<P><STRONG><a name="[c0]"></a>NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, py32f0xx_hal_cortex.o(i.NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
</UL>

<P><STRONG><a name="[b8]"></a>FLASH_MassErase</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, py32f0xx_hal_flash.o(i.FLASH_MassErase))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Erase
</UL>

<P><STRONG><a name="[b9]"></a>FLASH_PageErase</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, py32f0xx_hal_flash.o(i.FLASH_PageErase))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Erase
</UL>

<P><STRONG><a name="[bb]"></a>FLASH_Program_Page</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, py32f0xx_hal_flash.o(i.FLASH_Program_Page))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FLASH_Program_Page
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Program
</UL>

<P><STRONG><a name="[ba]"></a>FLASH_SectorErase</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, py32f0xx_hal_flash.o(i.FLASH_SectorErase))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Erase
</UL>

<P><STRONG><a name="[ad]"></a>FLASH_WaitForLastOperation</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, py32f0xx_hal_flash.o(i.FLASH_WaitForLastOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Program
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Erase
</UL>

<P><STRONG><a name="[c5]"></a>TIM_OC1_SetConfig</STRONG> (Thumb, 112 bytes, Stack size 20 bytes, py32f0xx_hal_tim.o(i.TIM_OC1_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_OC1_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
</UL>

<P><STRONG><a name="[c7]"></a>TIM_OC3_SetConfig</STRONG> (Thumb, 114 bytes, Stack size 20 bytes, py32f0xx_hal_tim.o(i.TIM_OC3_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_OC3_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
</UL>

<P><STRONG><a name="[c8]"></a>TIM_OC4_SetConfig</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, py32f0xx_hal_tim.o(i.TIM_OC4_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_OC4_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
</UL>

<P><STRONG><a name="[d5]"></a>Lcd_DisplayOnOff_D3</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, app_displaylcd.o(i.Lcd_DisplayOnOff_D3))
<BR><BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_smgDowm3_DisplayOnOff
</UL>

<P><STRONG><a name="[d7]"></a>Lcd_RawArrayTurnForVideoMemory_Dowm3</STRONG> (Thumb, 196 bytes, Stack size 20 bytes, app_displaylcd.o(i.Lcd_RawArrayTurnForVideoMemory_Dowm3))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Lcd_RawArrayTurnForVideoMemory_Dowm3
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_smgDowm3_SetNum
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_smgDowm3_SetNimus
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_smgDowm3_SetErrorNum
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_smgDowm3_DisplayOnOff
</UL>

<P><STRONG><a name="[d9]"></a>Lcd_RawArrayTurnForVideoMemory_Up3</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, app_displaylcd.o(i.Lcd_RawArrayTurnForVideoMemory_Up3))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Lcd_RawArrayTurnForVideoMemory_Up3
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_smgUp3_SetPNum
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_smgUp3_SetNum
</UL>

<P><STRONG><a name="[ca]"></a>Lcd_SetNimus_D3</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, app_displaylcd.o(i.Lcd_SetNimus_D3))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Lcd_SetNimus_D3 &rArr; Lcd_smgDowm3_SetNum &rArr; Lcd_RawArrayTurnForVideoMemory_Dowm3
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_smgDowm3_SetNum
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_smgDowm3_SetNimus
</UL>

<P><STRONG><a name="[cc]"></a>Lcd_SetNum_D3</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, app_displaylcd.o(i.Lcd_SetNum_D3))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Lcd_SetNum_D3
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_smgDowm3_SetNum
</UL>

<P><STRONG><a name="[cf]"></a>Lcd_icon_300Temp_onOff</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, app_displaylcd.o(i.Lcd_icon_300Temp_onOff))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_icon_onOff
</UL>

<P><STRONG><a name="[ce]"></a>Lcd_icon_350Temp_onOff</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, app_displaylcd.o(i.Lcd_icon_350Temp_onOff))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_icon_onOff
</UL>

<P><STRONG><a name="[cd]"></a>Lcd_icon_400Temp_onOff</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, app_displaylcd.o(i.Lcd_icon_400Temp_onOff))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_icon_onOff
</UL>

<P><STRONG><a name="[d0]"></a>Lcd_icon_SET_onOff</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, app_displaylcd.o(i.Lcd_icon_SET_onOff))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_icon_onOff
</UL>

<P><STRONG><a name="[d2]"></a>Lcd_icon_cup_onOff</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, app_displaylcd.o(i.Lcd_icon_cup_onOff))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_icon_onOff
</UL>

<P><STRONG><a name="[d1]"></a>Lcd_icon_soldering_onOff</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, app_displaylcd.o(i.Lcd_icon_soldering_onOff))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_icon_onOff
</UL>

<P><STRONG><a name="[d3]"></a>Lcd_icon_temp_onOff</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, app_displaylcd.o(i.Lcd_icon_temp_onOff))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_icon_onOff
</UL>

<P><STRONG><a name="[d6]"></a>Lcd_smgDowm3_Close</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_displaylcd.o(i.Lcd_smgDowm3_Close))
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_smgDowm3_SetNum
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_smgDowm3_SetNimus
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_smgDowm3_SetErrorNum
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_smgDowm3_DisplayOnOff
</UL>

<P><STRONG><a name="[10d]"></a>app_pid_PCmd</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, app_pid.o(i.app_pid_PCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = app_pid_PCmd &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pidControl
</UL>

<P><STRONG><a name="[10c]"></a>app_pid_iCmd</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, app_pid.o(i.app_pid_iCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = app_pid_iCmd &rArr; Drive_MosSwitch245_PWMOut &rArr; Drive_MosPWMoutMode &rArr;  APP_ErrorHandler (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_MosSwitch245_PWMOut
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_MosSwitch210_PWMOut
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pidOutCmd
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pidControl
</UL>

<P><STRONG><a name="[f5]"></a>app_GetAdcVlaue_NTC</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, app_math.o(i.app_GetAdcVlaue_NTC))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = app_GetAdcVlaue_NTC &rArr; APP_FirFilter_NtcTemp &rArr; arm_fir_f32 &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_ADCConvert
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_PcbNtc_adcTurnToTemp
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FirFilter_NtcTemp
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_PcbTempProtect_Task
</UL>

<P><STRONG><a name="[f6]"></a>app_GetAdcVlaue_TID</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, app_math.o(i.app_GetAdcVlaue_TID))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = app_GetAdcVlaue_TID &rArr; Drive_ADCConvert &rArr;  APP_ErrorHandler (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_ADCConvert
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_GetSolderingTid
</UL>

<P><STRONG><a name="[6f]"></a>app_GetAdcVlaue_electricity</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_math.o(i.app_GetAdcVlaue_electricity))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = app_GetAdcVlaue_electricity &rArr; Drive_ADCConvert &rArr;  APP_ErrorHandler (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_ADCConvert
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_solderingElectricity_Get
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_shortCircuitProtection
</UL>

<P><STRONG><a name="[f8]"></a>app_GetAdcVlaue_soldering</STRONG> (Thumb, 194 bytes, Stack size 16 bytes, app_math.o(i.app_GetAdcVlaue_soldering))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = app_GetAdcVlaue_soldering &rArr; APP_FirFilter_ADC &rArr; arm_fir_f32 &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_MosSwitch_OFF
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_ADCConvert
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_soldering_T12_adcTurnToTemp
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_solderingT210_adcTurnToTemp
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_solderingT115_adcTurnToTemp
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_DisplayFilter_kalman
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_DisplayFilter_RC
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_kalmanFilter_solderingTemp
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_FirFilter_ADC
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pid_Task
</UL>

<P><STRONG><a name="[6c]"></a>app_GetSolderingTid</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, app_math.o(i.app_GetSolderingTid))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_GetSolderingTid &rArr; app_GetAdcVlaue_TID &rArr; Drive_ADCConvert &rArr;  APP_ErrorHandler (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_GetAdcVlaue_TID
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_shortCircuitProtection
</UL>

<P><STRONG><a name="[6d]"></a>find_max_in_array</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, app_math.o(i.find_max_in_array))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = find_max_in_array
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_shortCircuitProtection
</UL>

<P><STRONG><a name="[b1]"></a>median_filter</STRONG> (Thumb, 86 bytes, Stack size 40 bytes, app_math.o(i.median_filter))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = median_filter
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLoadCurrent
</UL>

<P><STRONG><a name="[64]"></a>square_2</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, app_math.o(i.square_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = square_2 &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_solderingT210_adcTurnToTemp
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_solderingT115_adcTurnToTemp
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_PcbNtc_adcTurnToTemp
</UL>

<P><STRONG><a name="[65]"></a>square_3</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_math.o(i.square_3))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = square_3 &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_solderingT210_adcTurnToTemp
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_solderingT115_adcTurnToTemp
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_PcbNtc_adcTurnToTemp
</UL>

<P><STRONG><a name="[df]"></a>app_ButtonDispose</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, app_coder.o(i.app_ButtonDispose))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = app_ButtonDispose &rArr; Drive_FlashSaveData &rArr; Drive_FlashSaveData_addr &rArr; Drive_FlashProgramWithCheck &rArr; Drive_FlashProgram &rArr; APP_ErrorHandler &rArr; APP_shortCircuitProtection &rArr; Drive_MosSwitch245_PWMOut &rArr; Drive_MosPWMoutMode &rArr;  APP_ErrorHandler (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_FlashSaveData
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_joinSeting_Lcd
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_exitSeting_Lcd
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_Lcd_DisplayPNumber_SettingPage
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_Buz_OnOff
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ButtonCheck_Task
</UL>

<P><STRONG><a name="[f3]"></a>app_Encoder_TurnRightOrLeft</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, app_coder.o(i.app_Encoder_TurnRightOrLeft))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = app_Encoder_TurnRightOrLeft &rArr; app_EncoderSetData_LcdSettingPage &rArr; Lcd_smgDowm3_SetNimus &rArr; Lcd_SetNimus_D3 &rArr; Lcd_smgDowm3_SetNum &rArr; Lcd_RawArrayTurnForVideoMemory_Dowm3
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_LcdCommonMode
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_EncoderSetData_LcdSettingPage
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_Buz_OnOff
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_Encoder_Task
</UL>

<P><STRONG><a name="[fd]"></a>app_LcdBlink</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, app_hci.o(i.app_LcdBlink))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_LcdBlink &rArr; Lcd_icon_onOff &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_icon_onOff
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_IconBlink_Task
</UL>

<P><STRONG><a name="[86]"></a>get_buzzer_freq_by_temp</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, app_buzmusic.o(i.get_buzzer_freq_by_temp))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = get_buzzer_freq_by_temp &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_Buz_OnOff
</UL>

<P><STRONG><a name="[112]"></a>set_beep</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, app_buzmusic.o(i.set_beep))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = set_beep &rArr; set_buzHz
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_buzHz
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchBuzzerSpeak_silasofamirodo
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchBuzzerSpeak_mirodo
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchBuzzerSpeak_doromifasolasi
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchBuzzerSpeak_doromi
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchBuzzerSpeak_dongding
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchBuzzerSpeak_dingdongdiangdang
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchBuzzerSpeak_dingdong
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchBuzzerSpeak_alarm
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchBuzzerSpeak_20Ms
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchBuzzerSpeak_1S
</UL>

<P><STRONG><a name="[113]"></a>set_buzHz</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, app_buzmusic.o(i.set_buzHz))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = set_buzHz
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_beep
</UL>

<P><STRONG><a name="[e8]"></a>touchBuzzerSpeak_1S</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, app_buzmusic.o(i.touchBuzzerSpeak_1S))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchBuzzerSpeak_1S &rArr; set_beep &rArr; set_buzHz
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchBuzzerSpeak_L1
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_beep
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_Buz_Task
</UL>

<P><STRONG><a name="[e9]"></a>touchBuzzerSpeak_20Ms</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, app_buzmusic.o(i.touchBuzzerSpeak_20Ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchBuzzerSpeak_20Ms &rArr; set_beep &rArr; set_buzHz
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchBuzzerSpeak_Freq
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_beep
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_Buz_Task
</UL>

<P><STRONG><a name="[115]"></a>touchBuzzerSpeak_Freq</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, app_buzmusic.o(i.touchBuzzerSpeak_Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchBuzzerSpeak_Freq
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchBuzzerSpeak_20Ms
</UL>

<P><STRONG><a name="[114]"></a>touchBuzzerSpeak_L1</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, app_buzmusic.o(i.touchBuzzerSpeak_L1))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchBuzzerSpeak_L1
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchBuzzerSpeak_1S
</UL>

<P><STRONG><a name="[ea]"></a>touchBuzzerSpeak_alarm</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, app_buzmusic.o(i.touchBuzzerSpeak_alarm))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchBuzzerSpeak_alarm &rArr; set_beep &rArr; set_buzHz
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_beep
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_Buz_Task
</UL>

<P><STRONG><a name="[eb]"></a>touchBuzzerSpeak_dingdong</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, app_buzmusic.o(i.touchBuzzerSpeak_dingdong))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchBuzzerSpeak_dingdong &rArr; set_beep &rArr; set_buzHz
</UL>
<BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchBuzzer_overtone
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_beep
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_Buz_Task
</UL>

<P><STRONG><a name="[ed]"></a>touchBuzzerSpeak_dingdongdiangdang</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, app_buzmusic.o(i.touchBuzzerSpeak_dingdongdiangdang))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchBuzzerSpeak_dingdongdiangdang &rArr; set_beep &rArr; set_buzHz
</UL>
<BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchBuzzer_overtone
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_beep
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_Buz_Task
</UL>

<P><STRONG><a name="[ec]"></a>touchBuzzerSpeak_dongding</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, app_buzmusic.o(i.touchBuzzerSpeak_dongding))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchBuzzerSpeak_dongding &rArr; set_beep &rArr; set_buzHz
</UL>
<BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchBuzzer_overtone
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_beep
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_Buz_Task
</UL>

<P><STRONG><a name="[e4]"></a>touchBuzzerSpeak_doromi</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, app_buzmusic.o(i.touchBuzzerSpeak_doromi))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchBuzzerSpeak_doromi &rArr; set_beep &rArr; set_buzHz
</UL>
<BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchBuzzer_overtone
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_beep
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_Buz_Task
</UL>

<P><STRONG><a name="[e6]"></a>touchBuzzerSpeak_doromifasolasi</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, app_buzmusic.o(i.touchBuzzerSpeak_doromifasolasi))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchBuzzerSpeak_doromifasolasi &rArr; set_beep &rArr; set_buzHz
</UL>
<BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchBuzzer_overtone
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_beep
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_Buz_Task
</UL>

<P><STRONG><a name="[e5]"></a>touchBuzzerSpeak_mirodo</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, app_buzmusic.o(i.touchBuzzerSpeak_mirodo))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchBuzzerSpeak_mirodo &rArr; set_beep &rArr; set_buzHz
</UL>
<BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchBuzzer_overtone
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_beep
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_Buz_Task
</UL>

<P><STRONG><a name="[e7]"></a>touchBuzzerSpeak_silasofamirodo</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, app_buzmusic.o(i.touchBuzzerSpeak_silasofamirodo))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchBuzzerSpeak_silasofamirodo &rArr; set_beep &rArr; set_buzHz
</UL>
<BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchBuzzer_overtone
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_beep
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_Buz_Task
</UL>

<P><STRONG><a name="[116]"></a>touchBuzzer_overtone</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, app_buzmusic.o(i.touchBuzzer_overtone))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchBuzzer_overtone
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchBuzzerSpeak_silasofamirodo
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchBuzzerSpeak_mirodo
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchBuzzerSpeak_doromifasolasi
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchBuzzerSpeak_doromi
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchBuzzerSpeak_dongding
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchBuzzerSpeak_dingdongdiangdang
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchBuzzerSpeak_dingdong
</UL>

<P><STRONG><a name="[85]"></a>touchBuzzer_set</STRONG> (Thumb, 90 bytes, Stack size 4 bytes, app_buzmusic.o(i.touchBuzzer_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = touchBuzzer_set &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drive_Buz_OnOff
</UL>

<P><STRONG><a name="[38]"></a>_dadd1</STRONG> (Thumb, 290 bytes, Stack size 20 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[37]"></a>_dsub1</STRONG> (Thumb, 470 bytes, Stack size 40 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[11c]"></a>_fadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub.o(x$fpl$fadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frsb
</UL>

<P><STRONG><a name="[118]"></a>_fsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub.o(x$fpl$fsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frsb
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[49]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
